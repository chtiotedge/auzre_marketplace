### iot-redis v5.0.7 ###

bind 0.0.0.0
protected-mode no

port 6379

# TCP listen() backlog.
# tcp监听队列大小，在高并发的redis访问场景下，你需要提高tcp的监听队列大小，
# 否则将出现tcp连接耗尽问题，
# 同时修改此处配置的时候，也要一并修改linux的系统参数/proc/sys/net/core/somaxconn
# 否则不生效。somaxconn >= tcp-backlog
tcp-backlog 511

# 客户端连接空闲后自动关闭的等待时间，0表示不关闭。
timeout 1800

tcp-keepalive 300
daemonize no
supervised no
pidfile "/var/run/redis_6379.pid"

# Specify the server verbosity level.
# This can be one of:
# debug (a lot of information, useful for development/testing)
# verbose (many rarely useful info, but not a mess like the debug level)
# notice (moderately verbose, what you want in production probably)
# warning (only very important / critical messages are logged)
loglevel notice

logfile ""
databases 16

# 当在规定的时间内，Redis发生了写操作的个数满足条件，会触发发生BGSAVE命令。
# save <seconds> <changes>
# 当用户设置了多个save的选项配置，只要其中任一条满足，Redis都会触发一次BGSAVE操作，比如：900秒之内至少一次写操作、300秒之内至少发生10次写操作、60秒之内发生至少10000次写操作都会触发发生快照操作
save 1800 1

stop-writes-on-bgsave-error yes
rdbcompression yes

# 从redis5开始，rdb文件采用CRC64算法校验文件的完整性。
# 这将保证rdb文件的完整性和不可篡改，但是将保存和加载rdb文件时，多耗费10%的性能损耗。
# 如果希望发挥REDIS最大性能，可以关闭该请求
rdbchecksum yes

dbfilename "dump.rdb"

# RDB文件和AOF文件路径, IoT平台統一定義為 /etc/redis
dir "/etc/redis"

replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-disable-tcp-nodelay no

replica-priority 100

lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes
replica-lazy-flush yes

maxclients 10000

#開啟AOF模式
appendonly no
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes

# When rewriting the AOF file, Redis is able to use an RDB preamble in the
# AOF file for faster rewrites and recoveries. When this option is turned
# on the rewritten AOF file is composed of two different stanzas:
#
#   [RDB file][AOF tail]
#
# When loading Redis recognizes that the AOF file starts with the "REDIS"
# string and loads the prefixed RDB file, and continues loading the AOF
# tail.
#
# This is currently turned off by default in order to avoid the surprise
# of a format change, but will at some point be used as the default.
# Redis 4.0 新增了 RDB-AOF 混合持久化格式， 这是一个可选的功能， 在开启了这个功能之后， AOF 重写产生的文件将同时包含 RDB 格式的内容和 AOF 格式的内容， 其中 RDB 格式的内容用于记录已有的数据， 而 AOF 格式的内存则用于记录最近发生了变化的数据， 这样 Redis 就可以同时兼有 RDB 持久化和 AOF 持久化的优点 —— 既能够快速地生成重写文件， 也能够在出现问题时， 快速地载入数据。
aof-use-rdb-preamble no

lua-time-limit 5000
slowlog-log-slower-than 10000
slowlog-max-len 128
latency-monitor-threshold 0

################################ LATENCY MONITOR ##############################

#
# redis延时监控是为了在运行状态收集redis的慢操作（和慢日志的区别，其监控范围更广，不仅包括命令耗时，还包括内部指令，比如key过期回收这些的耗时）
# 通过latency可以打印耗时图表
# 通过latency-monitor-threshold（单位毫秒）的阈值记录延时日志，如果设置0，表示关闭延时日志监控。
#
# 默认情况下，延时监控是关闭的，大多数情况下，没有必要开启，除非redis存在性能问题。
# 延时监控开启后，会有一定的性能损耗，不过相当小，即使在大负载运行的情
# 延时监控也可以通过CONFIG SET latency-monitor-threshold <milliseconds>来进行热启动

############################# EVENT NOTIFICATION ##############################

# Redis can notify Pub/Sub clients about events happening in the key space.
# This feature is documented at http://redis.io/topics/notifications
#
# For instance if keyspace events notification is enabled, and a client
# performs a DEL operation on key "foo" stored in the Database 0, two
# messages will be published via Pub/Sub:
#
# PUBLISH __keyspace@0__:foo del
# PUBLISH __keyevent@0__:del foo
#
# It is possible to select the events that Redis will notify among a set
# of classes. Every class is identified by a single character:
#
#  K     Keyspace events, published with __keyspace@<db>__ prefix.
#  E     Keyevent events, published with __keyevent@<db>__ prefix.
#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...
#  $     String commands
#  l     List commands
#  s     Set commands
#  h     Hash commands
#  z     Sorted set commands
#  x     Expired events (events generated every time a key expires)
#  e     Evicted events (events generated when a key is evicted for maxmemory)
#  A     Alias for g$lshzxe, so that the "AKE" string means all the events.
#
#  The "notify-keyspace-events" takes as argument a string that is composed
#  of zero or multiple characters. The empty string means that notifications
#  are disabled.
#
#  Example: to enable list and generic events, from the point of view of the
#           event name, use:
#
#  notify-keyspace-events Elg
#
#  Example 2: to get the stream of the expired keys subscribing to channel
#             name __keyevent@0__:expired use:
#
#  notify-keyspace-events Ex
#
#  By default all notifications are disabled because most users don't need
#  this feature and the feature has some overhead. Note that if you don't
#  specify at least one of K or E, no events will be delivered.
notify-keyspace-events "xE"

hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
stream-node-max-bytes 4096
stream-node-max-entries 100
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
hz 10
dynamic-hz yes
aof-rewrite-incremental-fsync yes
rdb-save-incremental-fsync yes
requirepass 1qaz@WSXiot

